{"version":3,"sources":["logo.svg","components/PostForm.js","components/EditComponent.js","components/Post.js","components/AllPost.js","App.js","reportWebVitals.js","reducers/postReducer.js","index.js"],"names":["PostForm","handleSubmit","e","preventDefault","title","getTitle","value","message","getMessage","data","id","Date","edit","props","dispatch","type","className","onSubmit","this","ref","input","placeholder","required","cols","rows","Component","connect","EditComponent","handleEdit","newTitle","newMessage","post","defaultValue","Post","onClick","AllPost","posts","map","editing","state","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","postReducer","action","concat","filter","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aba8e11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass PostForm extends Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const title = this.getTitle.value\r\n        const message = this.getMessage.value\r\n        const data = {\r\n            id: new Date(),\r\n            title,\r\n            message,\r\n            edit: false\r\n        }\r\n        this.props.dispatch({\r\n            type: 'ADD_POST',\r\n            data\r\n        })\r\n        this.getTitle.value = \"\"\r\n        this.getMessage.value = \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"Post-form\">\r\n                <div className=\"max-width\">\r\n                    <h1>Create Post</h1>\r\n                    <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" ref={(input) => this.getTitle = input} placeholder=\"Enter Post Title\" required />\r\n                        <textarea cols=\"30\" ref={(input) => this.getMessage = input} rows=\"5\" placeholder=\"Enter Post\" required />\r\n                        <button className=\"post_button\">Post</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default connect()(PostForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nclass EditComponent extends Component {\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const newTitle = this.getTitle.value\r\n        const newMessage = this.getMessage.value\r\n        const data = {\r\n            newTitle,\r\n            newMessage\r\n        }\r\n        this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: data })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Post-form\">\r\n                <div className=\"max-width\">\r\n                    <form className=\"form\" onSubmit={this.handleEdit}>\r\n                        <input type=\"text\" ref={(input) => this.getTitle = input} defaultValue={this.props.post.title} placeholder=\"Enter Post Title\" required />\r\n                        <textarea cols=\"30\" ref={(input) => this.getMessage = input} defaultValue={this.props.post.message} rows=\"5\" placeholder=\"Enter Post\" required />\r\n                        <button className=\"update_button\">Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect()(EditComponent)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nclass Post extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"post\">\r\n                <h2>{this.props.post.title}</h2>\r\n                <p>{this.props.post.message}</p>\r\n                <div className=\"button-container\">\r\n                    <button className=\"edit_button\" onClick={() => this.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id })}>edit</button>\r\n                    <button className=\"delete_button\" onClick={() => this.props.dispatch({ type: 'DELETE_POST', id: this.props.post.id })}>delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect()(Post)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport EditComponent from './EditComponent'\r\nimport Post from './Post'\r\nclass AllPost extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"all-post\">\r\n                <div className=\"max-width\">\r\n                    {this.props.posts.map((post) =>\r\n                        <div key={post.id}>\r\n                            {post.editing ? <EditComponent post={post} key={post.id} /> : <Post key={post.id} post={post} />}\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(AllPost)\r\n\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport PostForm from './components/PostForm';\nimport AllPost from './components/AllPost';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <PostForm />\n        <AllPost />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const postReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':\r\n            return state.concat([action.data])\r\n\r\n        case 'DELETE_POST':\r\n            return state.filter((post) => post.id !== action.id)\r\n        \r\n        case 'EDIT_POST':\r\n            return state.map((post) => post.id === action.id ? {...post, editing: !post.editing} : post)\r\n        \r\n        case 'UPDATE': \r\n             return state.map((post) => {\r\n                 if (post.id === action.id) {\r\n                     return {\r\n                         ...post,\r\n                         title: action.data.newTitle,\r\n                         message: action.data.newMessage,\r\n                         editing: !post.editing\r\n                     }\r\n                 }else return post\r\n                 \r\n             })\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport postReducer from './reducers/postReducer';\nconst store = createStore(postReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}